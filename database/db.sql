-- =====================================================
-- Kochi Metro Induction & IBL Planner Database Schema
-- =====================================================
-- Based on the provided schema structure

-- Enable required extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS btree_gist;

-- Table: users
CREATE TABLE public.users (
  user_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  username text NOT NULL UNIQUE,
  display_name text,
  role text NOT NULL DEFAULT 'viewer'
);

-- Table: depots
CREATE TABLE public.depots (
  depot_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  name text NOT NULL,
  code text UNIQUE,
  is_active boolean NOT NULL DEFAULT true
);

-- Table: stabling_bays
CREATE TABLE public.stabling_bays (
  bay_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  depot_id uuid NOT NULL,
  position_idx integer NOT NULL,
  electrified boolean NOT NULL DEFAULT true,
  length_m numeric NOT NULL DEFAULT 100.00,
  access_time_min numeric NOT NULL DEFAULT 3.00,
  is_active boolean NOT NULL DEFAULT true,
  CONSTRAINT stabling_bays_depot_id_fkey FOREIGN KEY (depot_id) REFERENCES public.depots(depot_id)
);

-- Table: trains
CREATE TABLE public.trains (
  train_id text PRIMARY KEY,
  car_count integer NOT NULL DEFAULT 4 CHECK (car_count > 0),
  brand_code text,
  wrap_id text,
  status text NOT NULL DEFAULT 'unknown',
  current_bay uuid,
  notes text,
  CONSTRAINT trains_current_bay_fkey FOREIGN KEY (current_bay) REFERENCES public.stabling_bays(bay_id)
);

-- Table: bay_occupancy
CREATE TABLE public.bay_occupancy (
  occ_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  bay_id uuid NOT NULL,
  train_id text NOT NULL,
  from_ts timestamptz NOT NULL,
  to_ts timestamptz NOT NULL,
  CONSTRAINT bay_occupancy_bay_id_fkey FOREIGN KEY (bay_id) REFERENCES public.stabling_bays(bay_id),
  CONSTRAINT bay_occupancy_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id)
);

-- Table: induction_plans
CREATE TABLE public.induction_plans (
  plan_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  plan_date date NOT NULL,
  created_by uuid,
  status text NOT NULL DEFAULT 'draft',
  weights_json jsonb NOT NULL DEFAULT '{}'::jsonb,
  notes text,
  CONSTRAINT induction_plans_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(user_id)
);

-- Table: induction_plan_items
CREATE TABLE public.induction_plan_items (
  item_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  plan_id uuid NOT NULL,
  train_id text NOT NULL,
  decision text NOT NULL,
  bay_id uuid,
  turnout_rank integer,
  km_target numeric,
  notes text,
  explain_json jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT induction_plan_items_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.induction_plans(plan_id),
  CONSTRAINT induction_plan_items_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id),
  CONSTRAINT induction_plan_items_bay_id_fkey FOREIGN KEY (bay_id) REFERENCES public.stabling_bays(bay_id)
);

-- Table: alerts
CREATE TABLE public.alerts (
  alert_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  plan_id uuid NOT NULL,
  severity text NOT NULL,
  message text NOT NULL,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  resolved boolean NOT NULL DEFAULT false,
  created_at timestamptz NOT NULL DEFAULT now(),
  CONSTRAINT alerts_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.induction_plans(plan_id)
);

-- Table: branding_campaigns
CREATE TABLE public.branding_campaigns (
  wrap_id text PRIMARY KEY,
  advertiser text NOT NULL,
  start_date date NOT NULL,
  end_date date NOT NULL,
  weekly_target_hours numeric NOT NULL DEFAULT 0,
  min_daily_hours numeric NOT NULL DEFAULT 0,
  penalty_weight numeric NOT NULL DEFAULT 1
);

-- Table: cleaning_slots
CREATE TABLE public.cleaning_slots (
  slot_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  bay_id uuid NOT NULL,
  start_ts timestamptz NOT NULL,
  end_ts timestamptz NOT NULL,
  manpower integer NOT NULL CHECK (manpower >= 0),
  clean_type text NOT NULL,
  CONSTRAINT cleaning_slots_bay_id_fkey FOREIGN KEY (bay_id) REFERENCES public.stabling_bays(bay_id)
);

-- Table: branding_exposure_log
CREATE TABLE public.branding_exposure_log (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  train_id text NOT NULL,
  log_date date NOT NULL,
  exposure_hours numeric NOT NULL DEFAULT 0,
  CONSTRAINT branding_exposure_log_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id)
);

-- Table: cleaning_slots
CREATE TABLE public.cleaning_slots (
  slot_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  bay_id uuid NOT NULL,
  start_ts timestamptz NOT NULL,
  end_ts timestamptz NOT NULL,
  manpower integer NOT NULL CHECK (manpower >= 0),
  clean_type text NOT NULL,
  CONSTRAINT cleaning_slots_bay_id_fkey FOREIGN KEY (bay_id) REFERENCES public.stabling_bays(bay_id)
);

-- Table: fitness_certificates
CREATE TABLE public.fitness_certificates (
  cert_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  train_id text NOT NULL,
  dept text NOT NULL,
  valid_from timestamptz NOT NULL,
  valid_to timestamptz NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['valid', 'expired', 'suspended'])),
  source_ref text,
  CONSTRAINT fitness_certificates_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id)
);

-- Table: job_cards
CREATE TABLE public.job_cards (
  job_id text PRIMARY KEY,
  train_id text NOT NULL,
  source text NOT NULL DEFAULT 'Maximo',
  status text NOT NULL,
  priority integer CHECK (priority >= 1 AND priority <= 5),
  due_date date,
  ibl_required boolean NOT NULL DEFAULT false,
  title text,
  details text,
  CONSTRAINT job_cards_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id)
);

-- Table: mileage_log
CREATE TABLE public.mileage_log (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  train_id text NOT NULL,
  log_date date NOT NULL,
  km_run numeric NOT NULL DEFAULT 0,
  CONSTRAINT mileage_log_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id)
);

-- Table: overrides
CREATE TABLE public.overrides (
  override_id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  plan_id uuid NOT NULL,
  train_id text NOT NULL,
  reason text NOT NULL,
  user_id uuid,
  CONSTRAINT overrides_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.induction_plans(plan_id),
  CONSTRAINT overrides_train_id_fkey FOREIGN KEY (train_id) REFERENCES public.trains(train_id),
  CONSTRAINT overrides_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);

-- Exclusion constraints for bay_occupancy
ALTER TABLE bay_occupancy
  ADD EXCLUDE USING gist (
    bay_id WITH =,
    tstzrange(from_ts, to_ts) WITH &&
  );

ALTER TABLE bay_occupancy
  ADD EXCLUDE USING gist (
    train_id WITH =,
    tstzrange(from_ts, to_ts) WITH &&
  );

ALTER TABLE bay_occupancy
  ADD CONSTRAINT chk_bay_time CHECK (from_ts < to_ts);

-- Unique constraint for induction_plan_items
ALTER TABLE induction_plan_items
  ADD CONSTRAINT uq_plan_train UNIQUE (plan_id, train_id);
